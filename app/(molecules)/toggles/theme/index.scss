/* === How I want it to look  === */
@use '@/app/(atoms)' as *;

/* === What I want  === */
.theme-toggle {
  /* === How I want it to look  === */

  grid-area: theme-toggle;
  border: none;
  outline: none;
  display: flex;
  cursor: pointer;
  border-radius: 50%;
  align-items: center;
  justify-content: center;

  // color
  background-color: transparent;
  box-shadow: 4px 4px 15px transparent;

  // behavior
  input {
    display: none;
  }

  .shape-of {
    z-index: 1;
    position: absolute;
    border-radius: 50%;
    background: none;
    border: 0px solid transparent;
    transition: all 500ms;

    &.the-sun {
      width: calc(var(--icon-size) - 0.3em);
      height: calc(var(--icon-size) - 0.3em);

      border: 0.185em solid var(--🌑); // The Ring When its dark and a the-sun theme applied
      &.while-menu-open {
        border: 0.185em solid var(--👓); // The Ring When its dark and a the-sun theme applied
      }
      box-shadow: inset -0.7em -0.7em var(--☀️); //normal the-sun mode sun Body remain white
      ~ .rays {
        transform: rotate(90deg);
        transition: transform 750ms 400ms;
      }
      ~ .rays .ray {
        height: calc(var(--icon-size) - 1em);
        width: calc(var(--icon-size) + 0.5em);
        background-color: var(--☀️); //normal the-sun mode rays remain white

        @media screen and (prefers-color-scheme: dark) {
          background-color: var(--☀️);
        }
      }

      @media screen and (prefers-color-scheme: dark) {
        box-shadow: inset -0.7em -0.7em var(--☀️);
      }
    }

    &.the-moon {
      width: var(--icon-size);
      height: var(--icon-size);
      box-shadow: inset -0.3em -0.3em var(--🌑);
      ~ .rays .ray {
        width: 0;
        height: 0;
      }
    }
  }

  .rays {
    display: flex;
    position: absolute;
    align-items: center;
    justify-content: center;
    .ray {
      position: absolute;
      border-radius: 70%;
      transition: all 500ms;
      &:nth-child(2) {
        transform: rotate(45deg);
      }

      &:nth-child(3) {
        transform: rotate(90deg);
      }

      &:nth-child(4) {
        transform: rotate(-45deg);
      }
    }
  }

  &:hover {
    transition: all 400ms ease-in-out;
    transform: scale(1.1);
  }
}

/* === How I want it to behave  === */
