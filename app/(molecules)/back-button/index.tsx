'use client';

/* === What I want  === */
// A back button for the webapp that conditionally renders whether the page in view is the homepage or other pages in the web application

// --------- Imports ---------- //
import { useTheme } from '@/app/(atoms)/utility/component-states';
import { useRouter, usePathname } from 'next/navigation';
// --------- Imports ---------- //

// --------- Render ---------- //
export default function back() {
  const { theme }: any = useTheme();
  const router = useRouter();
  const path = usePathname();

  const handleBackClick = () => {
    router.back();
  };
  if (path === '/'){
    return <p id="back-button-text">NG CDF <br /><sup>Bursary Project</sup></p>;

  }else{
      return (
        <>
          <section
            id={path !== '/' ? 'back-button-text-extended' : 'back-button-text'}
          >
            <p>
              {' '}
              <sup>currently at </sup> {path}
            </p>
          </section>

          <svg
            id="back-button"
            viewBox={'218.368 188.626 50.96 33.885'}
            xmlns="http://www.w3.org/2000/svg"
            onClick={handleBackClick}
          >
            <path
              className={theme ? 'when-its-light-out' : 'when-its-dark-outside'}
              d="M 218.369 208.662 C 225.058 201.976 231.74 195.283 238.459 188.626 C 238.41 189.343 238.349 190.058 238.307 190.775 C 238.232 191.997 238.208 193.231 238.306 194.455 C 238.434 195.826 238.738 197.254 239.634 198.342 C 240.931 199.779 242.967 200.018 244.775 200.282 C 246.608 200.515 248.442 200.755 250.243 201.172 C 250.92 201.337 251.596 201.521 252.263 201.727 C 253.122 202 253.976 202.288 254.818 202.604 C 255.627 202.906 256.423 203.233 257.207 203.593 C 258.094 204.007 258.961 204.463 259.793 204.979 C 260.685 205.53 261.53 206.153 262.331 206.829 C 263.131 207.503 263.87 208.247 264.59 209.007 C 265.411 209.891 266.189 210.812 266.95 211.745 C 267.754 212.737 268.567 213.721 269.328 214.747 C 267.524 214.078 265.731 213.372 263.91 212.75 C 263.181 212.498 262.448 212.256 261.711 212.024 C 260.799 211.745 259.88 211.49 258.954 211.262 C 258.117 211.055 257.272 210.886 256.421 210.74 C 255.386 210.57 254.338 210.484 253.288 210.439 C 252.253 210.405 251.217 210.458 250.186 210.554 C 248.942 210.658 247.718 210.907 246.488 211.123 C 243.854 211.394 241.229 212.688 239.776 214.962 C 238.328 217.179 238.178 219.948 238.438 222.511 C 237.346 221.769 236.263 221.016 235.176 220.269 C 234.572 219.849 233.963 219.432 233.357 219.012 C 232.731 218.577 232.102 218.147 231.475 217.714 C 230.798 217.245 230.119 216.776 229.439 216.309 C 228.884 215.927 228.331 215.543 227.775 215.16 C 227.078 214.678 226.378 214.197 225.679 213.714 C 225.052 213.281 224.424 212.85 223.798 212.416 C 221.987 211.167 220.177 209.915 218.368 208.663 L 218.369 208.662 Z"
            />
          </svg>
        </>
      );
  }

  // return (
  //   <>
  //     <Link href={path}>
  //       <svg
  //         id="back-button"
  //         viewBox={'218.368 188.626 50.96 33.885'}
  //         xmlns="http://www.w3.org/2000/svg"
  //       >
  //         <path
  //           onClick={handleBackClick}
  //           className={theme ? 'when-its-light-out' : 'when-its-dark-outside'}
  //           d="M 218.369 208.662 C 225.058 201.976 231.74 195.283 238.459 188.626 C 238.41 189.343 238.349 190.058 238.307 190.775 C 238.232 191.997 238.208 193.231 238.306 194.455 C 238.434 195.826 238.738 197.254 239.634 198.342 C 240.931 199.779 242.967 200.018 244.775 200.282 C 246.608 200.515 248.442 200.755 250.243 201.172 C 250.92 201.337 251.596 201.521 252.263 201.727 C 253.122 202 253.976 202.288 254.818 202.604 C 255.627 202.906 256.423 203.233 257.207 203.593 C 258.094 204.007 258.961 204.463 259.793 204.979 C 260.685 205.53 261.53 206.153 262.331 206.829 C 263.131 207.503 263.87 208.247 264.59 209.007 C 265.411 209.891 266.189 210.812 266.95 211.745 C 267.754 212.737 268.567 213.721 269.328 214.747 C 267.524 214.078 265.731 213.372 263.91 212.75 C 263.181 212.498 262.448 212.256 261.711 212.024 C 260.799 211.745 259.88 211.49 258.954 211.262 C 258.117 211.055 257.272 210.886 256.421 210.74 C 255.386 210.57 254.338 210.484 253.288 210.439 C 252.253 210.405 251.217 210.458 250.186 210.554 C 248.942 210.658 247.718 210.907 246.488 211.123 C 243.854 211.394 241.229 212.688 239.776 214.962 C 238.328 217.179 238.178 219.948 238.438 222.511 C 237.346 221.769 236.263 221.016 235.176 220.269 C 234.572 219.849 233.963 219.432 233.357 219.012 C 232.731 218.577 232.102 218.147 231.475 217.714 C 230.798 217.245 230.119 216.776 229.439 216.309 C 228.884 215.927 228.331 215.543 227.775 215.16 C 227.078 214.678 226.378 214.197 225.679 213.714 C 225.052 213.281 224.424 212.85 223.798 212.416 C 221.987 211.167 220.177 209.915 218.368 208.663 L 218.369 208.662 Z"
  //         />
  //       </svg>
  //       <>{path}</>
  //     </Link>
  //     <p id="back-button-text">{path.toString()}</p>
  //   </>
  // );
}

// --------- Render ---------- //

/* === How I want it to look  === */

/* === How I want it to behave  === */
